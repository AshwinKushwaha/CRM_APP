@model CRMApp.ViewModels.CustomerViewModel

@{
	ViewData["Title"] = "Details";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div>
	<h1 class="text-center">Customer Details</h1>
	<hr />
	<dl class="row">
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Name)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Name)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Email)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Email)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Phone)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Phone)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.CreatedAt)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.CreatedAt)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.UpdatedAt)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.UpdatedAt)
		</dd>
	</dl>
</div>

<h1 class="text-center">Contact Details</h1>
<hr />
<div class="card">
	<div class="card-header">
		<form asp-action="Details" asp-controller="Customer" method="post">
			<div class="d-flex gap-1">
				<input type="hidden" value="@Model.Customer.Id" />
				<select asp-for="ContactFilter" asp-items="Html.GetEnumSelectList<CRMApp.ViewModels.ContactFilter>()" class="form-control" style="width: 8%;"></select>
				<input asp-for="ContactInput" placeholder="Search Bar" class="form-control" />
				<button type="Submit" class="btn btn-outline-primary">Search</button>
			</div>
		</form>
	</div>

	<div class="text-end me-3 mt-3">
		<form method="post">
			<input type="hidden" name="addNewContact" value="true"/>
			<button type="submit" data-bs-toggle="modal" data-bs-target="#createModal" class="btn btn-success">Add New Contact</button>
		</form>
		
	</div>
	<div class="d-flex justify-content-center table-responsive-sm table-responsive-md">
		@if(Model.Contacts.Count == 0)
		{
			<h4 class="text-center mb-3">No Contact Found</h4>
		}else
			{
			<table class="table table-hover table-bordered table-striped mt-4 " style="width:98%;">
				<thead>
					<tr>


						<th>
							@Html.DisplayNameFor(model => model.CustomerContact.ContactName)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.CustomerContact.Relation)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.CustomerContact.ContactType)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.CustomerContact.Contact)
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Contacts)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.ContactName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Relation)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.ContactType)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Contact)
							</td>

							<td>
								<div class="d-flex justify-content-center gap-1">
									@if (User.IsInRole("admin") || User.IsInRole("salesrep"))
									{
										<form method="post">
											<input type="hidden" name="selectedContactId" value=@item.Id />
											<button type="submit" data-bs-toggle="modal" data-bs-target="#EditModal" class="btn btn-outline-success">Edit</button>
										</form>

									}

									@if (User.IsInRole("admin"))
									{
										<form method="post">
											<input type="hidden" name="deleteContactId" value=@item.Id />
											<button type="submit" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" class="btn btn-outline-danger">Delete</button>
										</form>
									}
								</div>

							</td>
						</tr>
					}
				</tbody>
			</table>
			}

			</div>
</div>
<br />
<h1 class="text-center">Notes</h1>
<hr />

	<div class="card">
	<div class="card-header">
		<form asp-action="Details" asp-controller="Customer" method="post">
			<div class="d-flex gap-1" >
				<input type="hidden" name="customerId" value="@Model.Customer.Id" />
				<select asp-for="NoteFilter" asp-items="Html.GetEnumSelectList<CRMApp.ViewModels.NoteFilter>()" class="form-control" style="width: 8%;"></select>
				<input asp-for="NoteInput" placeholder="Search Bar" class="form-control" />
				<button type="Submit" class="btn btn-outline-primary">Search</button>
			</div>
		</form>
		</div>
	<div class="text-end me-3 mt-3">

		<form method="post">
			<input type="hidden" name="addNewNote" value="true" />
			<button type="submit" data-bs-toggle="modal" data-bs-target="#createNoteModal" class="btn btn-success">Add New Note</button>
		</form>

	</div>
	<div class="d-flex justify-content-center table-responsive-sm table-responsive-md">
		@if(Model.Notes.Count == 0)
		{
			<h4 class="text-center mb-3">No Note Found</h4>
		}
		else
		{
			<table class="table table-striped table-hover table-bordered mt-3 " style="width:98%;">
				<thead>
					<tr>
						<th>
							@Html.DisplayNameFor(model => model.Note.Description)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Note.CreatedAt)
						</th>

						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Notes)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.Description)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.CreatedAt)
							</td>

							<td class="d-flex justify-content-center gap-1">
								<form method="post">
									<input type="hidden" name="selectedNoteId" value=@item.Id />
									<button type="submit" data-bs-toggle="modal" data-bs-target="#EditNoteModal" class="btn btn-outline-success">Edit</button>
								</form>

								<form method="post">
									<input type="hidden" name="deleteNoteId" value=@item.Id />
									<button type="submit" data-bs-toggle="modal" data-bs-target="#confirmNoteDeleteModal" class="btn btn-outline-danger">Delete</button>
								</form>
							</td>
						</tr>
					}
				</tbody>
			</table>
		}

		

	</div>
	</div>




@*Create Modal section *@

@{
	bool isAddNew = false;
	string customerName =  Model.Customer.Name; 
	if (Context.Request.HasFormContentType)
	{
		isAddNew = Context.Request.Form["addNewContact"] == "true";
		
	}
}

@if (isAddNew)
{
	<div class="modal fade show d-block" id="createModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_ContactForm" model="new CRMApp.ViewModels.CustomerViewModel{
CustomerContact = new CustomerContact{Id =0 , CustomerId = Model.Customer.Id},
Customer = new Customer{Name = customerName}
}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}





@*Edit Modal Section*@
@{
	string selectedId = null;
	CRMApp.Models.CustomerContact selectedContact = null;
	

	if (Context.Request.HasFormContentType)
	{
		selectedId = Context.Request.Form["selectedContactId"];
		selectedContact = Model.Contacts.FirstOrDefault(c => c.Id.ToString() == selectedId);
		
	}
}
	
@if(selectedContact != null)
{
	<div class="modal fade show d-block" id="EditModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_ContactForm" model="new CRMApp.ViewModels.CustomerViewModel(){
							CustomerContact = new CustomerContact {
								Id = selectedContact.Id,
								CustomerId = selectedContact.CustomerId,
								Contact = selectedContact.Contact,
								ContactName = selectedContact.ContactName,
								ContactType = selectedContact.ContactType,
								Relation = selectedContact.Relation
							},

				}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}


@*Delete Modal Section*@

@{
	string deleteId = null;
	CRMApp.Models.CustomerContact deleteContact = null;
	if (Context.Request.HasFormContentType)
	{
		deleteId = Context.Request.Form["deleteContactId"];
		deleteContact = Model.Contacts.FirstOrDefault(c => c.Id.ToString() == deleteId);
	}

}
@if (deleteContact != null)
{
	<div class="modal fade show d-block" id="confirmDeleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-action="DeleteContact" asp-controller="Contact" method="post">
				<input type="hidden" name="id" value="@deleteContact.Id" />
					<div class="modal-header">
						<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
						<a href="" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></a>
					</div>
					<div class="modal-body">
						Are you sure you want to delete <strong>@deleteContact.ContactName</strong>?
					</div>
					<div class="modal-footer">
						<a href="" class="btn btn-secondary">Cancel</a>
						<button type="submit" class="btn btn-danger">Delete</button>
					</div>
				</form>
			</div>
		</div>
	</div>
<div class="modal-backdrop fade show"></div>
}


@{
	bool isAddNewNote = false;
	if (Context.Request.HasFormContentType)
	{
		isAddNewNote = Context.Request.Form["addNewNote"] == "true";
	}
	var currentUser = ViewBag.CurrentUser;
	
}

@if (isAddNewNote)
{
	<div class="modal fade show d-block" id="createNoteModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_NoteForm" model="new CRMApp.ViewModels.CustomerViewModel{Note = new Note{Id = 0, CustomerId = Model.Customer.Id }, CurrentUsername = currentUser}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@{
	string selectedNoteId = null;
	CRMApp.Models.Note selectedNote = null;

	if (Context.Request.HasFormContentType)
	{
		selectedNoteId = Context.Request.Form["selectedNoteId"];
		selectedNote = Model.Notes.FirstOrDefault(c => c.Id.ToString() == selectedNoteId);
	}
	
}

@if (selectedNote != null)
{
	<div class="modal fade show d-block" id="EditNoteModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_NoteForm" model="new CRMApp.ViewModels.CustomerViewModel{
							Note = new Note{
								Id = selectedNote.Id,
								CustomerId = selectedNote.CustomerId,
								Description = selectedNote.Description,
								CreatedAt = selectedNote.CreatedAt,
								CreatedBy = selectedNote.CreatedBy
							},
CurrentUsername = currentUser
				}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@{
	string deleteNoteId = null;
	CRMApp.Models.Note deleteNote = null;
	if (Context.Request.HasFormContentType)
	{
		deleteNoteId = Context.Request.Form["deleteNoteId"];
		deleteNote = Model.Notes.FirstOrDefault(c => c.Id.ToString() == deleteNoteId);
	}

}
@if (deleteNote != null)
{
	<div class="modal fade show d-block" id="confirmNoteDeleteModal" tabindex="-1" aria-labelledby="deleteNoteModalLabel" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-action="DeleteNote" asp-controller="Note" method="post">
					<input type="hidden" name="id" value="@deleteNote.Id" />
					<div class="modal-header">
						<h5 class="modal-title" id="deleteNoteModalLabel">Confirm Delete</h5>
						<a href="" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></a>
					</div>
					<div class="modal-body">
						Are you sure you want to delete note <strong>@deleteNote.Id</strong>?
					</div>
					<div class="modal-footer">
						<a href="" class="btn btn-secondary">Cancel</a>
						<button type="submit" class="btn btn-danger">Delete</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@section Scripts {

	<script>
		
		$(document).ready(function () {
			$("#contactTypeList").on('change',function(){
				var contactTypeList = $("#contactTypeList option:selected").text();
				$("#contactType").text(contactTypeList)
			})

			$("#btnSave").click(function (e) {

				debugger;
				e.preventDefault();
				debugger;
				var form = $("#frmContact");
				if (form.valid()) {
					form.submit();
				}

			})
			$("#btnNoteSave").click(function(e){
				debugger;
				e.preventDefault();
				var form = $("#frmNote");
				if(form.valid()){
					form.submit()
				}
			})
		});
	</script>
}
