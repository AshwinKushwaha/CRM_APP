@model CRMApp.ViewModels.CustomerViewModel

@{
	ViewData["Title"] = "Details";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div style="position:relative; top: 1rem;">

<div>
	<h1 class="text-center">Customer Details</h1>
	<hr />
	<dl class="row">
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Name)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Name)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Email)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Email)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.Phone)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.Phone)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.CreatedAt)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.CreatedAt)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Customer.UpdatedAt)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Customer.UpdatedAt)
		</dd>
	</dl>
</div>

<h1 class="text-center">Contact Details</h1>
<hr />
<div class="card">
	<div class="card-header">
		<form asp-action="Details" asp-controller="Customer" method="post">
			<div class="d-flex gap-1">
				<input type="hidden" value="@Model.Customer.Id" />
				<select asp-for="ContactFilter" asp-items="Html.GetEnumSelectList<CRMApp.ViewModels.ContactFilter>()" class="form-control" style="width: 8%;"></select>
				<input asp-for="ContactInput" placeholder="Search Bar" class="form-control" />
				<button type="Submit" class="btn btn-outline-primary">Search</button>
			</div>
		</form>
	</div>

	<div class="text-end me-3 mt-3">
		<form method="post">
			<input type="hidden" name="addNewContact" value="true"/>
			<button type="submit" data-bs-toggle="modal" data-bs-target="#createModal" class="btn btn-success">Add New Contact</button>
		</form>
		
	</div>
	<div id="partialContainer">
		<partial  name="_ContactList" model="Model.Contacts"/>
	</div>
		<nav class="ms-3">
			<ul class="pagination">
				@if (Model.Contacts.HasPreviousPage)
				{
					<li class="page-item">
						<a data-contactpageindex="@(Model.Contacts.PageIndex - 1)" data-id="@Model.Customer.Id" class="page-link contact-page-link"><strong>&lt;</strong></a>
					</li>
				}
				@for (int i = Model.Contacts.StartPage; i <= Model.Contacts.EndPage; i++)
				{
					<li class="page-item @(i == Model.Contacts.PageIndex ? "active" : "")">
						<a data-contactpageindex="@i" data-id="@Model.Customer.Id" class="page-link contact-page-link">@i</a>
					</li>
				}
				@if (Model.Contacts.HasNextPage)
				{
					<li class="page-item">
						<a data-contactpageindex="@(Model.Contacts.PageIndex + 1)" data-id="@Model.Customer.Id" class="page-link contact-page-link"><strong>&gt;</strong></a>
					</li>
				}
			</ul>
		</nav>
</div>
<br />
<h1 class="text-center">Notes</h1>
<hr />

	<div class="card">
	<div class="card-header">
		<form asp-action="Details" asp-controller="Customer" method="post">
			<div class="d-flex gap-1" >
				<input type="hidden" name="customerId" value="@Model.Customer.Id" />
				<select asp-for="NoteFilter" asp-items="Html.GetEnumSelectList<CRMApp.ViewModels.NoteFilter>()" class="form-control" style="width: 8%;"></select>
				<input asp-for="NoteInput" placeholder="Search Bar" class="form-control" />
				<button type="Submit" class="btn btn-outline-primary">Search</button>
			</div>
		</form>
		</div>
	<div class="text-end me-3 mt-3">

		<form method="post">
			<input type="hidden" name="addNewNote" value="true" />
			<button type="submit" data-bs-toggle="modal" data-bs-target="#createNoteModal" class="btn btn-success">Add New Note</button>
		</form>

	</div>
	<div id="NotePartialContainer">
		<partial name="_NoteList" model="Model.Notes"/>
	</div>
	<nav class="ms-3">
		<ul class="pagination">
				@if (Model.Notes.HasPreviousPage)
				{
					<li class="page-item">
						<a data-notepageindex="@(Model.Notes.PageIndex - 1)" data-id="@Model.Customer.Id" class="page-link note-page-link">Previous</a>
					</li>
				}
				@for(int i = Model.Notes.StartPage; i <= Model.Notes.EndPage; i++)
				{
					<li class="page-item @(i == Model.Notes.PageIndex ? "active" : "") note-page-item">
						<a data-notepageindex="@i" data-id="@Model.Customer.Id" class="page-link note-page-link">@i</a>
					</li>
				}
				@if (Model.Notes.HasNextPage)
				{
					<li class="page-item">
						<a data-notepageindex="@(Model.Notes.PageIndex + 1)" data-id="@Model.Customer.Id" class="page-link note-page-link">Next</a>
					</li>
				}
			</ul>
	</nav>
	</div>
</div>



@*Create Modal section *@

@{
	bool isAddNew = false;
	string customerName =  Model.Customer.Name; 
	if (Context.Request.HasFormContentType)
	{
		isAddNew = Context.Request.Form["addNewContact"] == "true";
		
	}
}

@if (isAddNew)
{
	<div class="modal fade show d-block" id="createModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_ContactForm" model="new CRMApp.ViewModels.CustomerViewModel{
CustomerContact = new CustomerContact{Id =0 , CustomerId = Model.Customer.Id},
Customer = new Customer{Name = customerName}
}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}





@*Edit Modal Section*@
@{
	string selectedId = null;
	CRMApp.Models.CustomerContact selectedContact = null;
	

	if (Context.Request.HasFormContentType)
	{
		selectedId = Context.Request.Form["selectedContactId"];
		selectedContact = Model.Contacts.FirstOrDefault(c => c.Id.ToString() == selectedId);
		
	}
}
	
@if(selectedContact != null)
{
	<div class="modal fade show d-block" id="EditModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				@await Html.PartialAsync("_ContactForm", new CRMApp.ViewModels.CustomerViewModel()
{
	CustomerContact = new CustomerContact
	{
		Id = selectedContact.Id,
		CustomerId = selectedContact.CustomerId,
		Contact = selectedContact.Contact,
		ContactName = selectedContact.ContactName,
		ContactType = selectedContact.ContactType,
		Relation = selectedContact.Relation
	},
	Customer = new Customer { Name = customerName }
})
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}


@*Delete Modal Section*@

@{
	string deleteId = null;
	CRMApp.Models.CustomerContact deleteContact = null;
	if (Context.Request.HasFormContentType)
	{
		deleteId = Context.Request.Form["deleteContactId"];
		deleteContact = Model.Contacts.FirstOrDefault(c => c.Id.ToString() == deleteId);
	}

}
@if (deleteContact != null)
{
	<div class="modal fade show d-block" id="confirmDeleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-action="DeleteContact" asp-controller="Contact" method="post">
				<input type="hidden" name="id" value="@deleteContact.Id" />
					<div class="modal-header">
						<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
						<a href="" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></a>
					</div>
					<div class="modal-body">
						Are you sure you want to delete <strong>@deleteContact.ContactName</strong>?
					</div>
					<div class="modal-footer">
						<a href="" class="btn btn-secondary">Cancel</a>
						<button type="submit" class="btn btn-danger">Delete</button>
					</div>
				</form>
			</div>
		</div>
	</div>
<div class="modal-backdrop fade show"></div>
}


@{
	bool isAddNewNote = false;
	if (Context.Request.HasFormContentType)
	{
		isAddNewNote = Context.Request.Form["addNewNote"] == "true";
	}
	var currentUser = ViewBag.CurrentUser;
	
}

@if (isAddNewNote)
{
	<div class="modal fade show d-block" id="createNoteModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_NoteForm" model="new CRMApp.ViewModels.CustomerViewModel{Note = new Note{Id = 0, CustomerId = Model.Customer.Id }, CurrentUsername = currentUser}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@{
	string selectedNoteId = null;
	CRMApp.Models.Note selectedNote = null;

	if (Context.Request.HasFormContentType)
	{
		selectedNoteId = Context.Request.Form["selectedNoteId"];
		selectedNote = Model.Notes.FirstOrDefault(c => c.Id.ToString() == selectedNoteId);
	}
	
}

@if (selectedNote != null)
{
	<div class="modal fade show d-block" id="EditNoteModal" tabindex="-1" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<partial name="_NoteForm" model="new CRMApp.ViewModels.CustomerViewModel{
							Note = new Note{
								Id = selectedNote.Id,
								CustomerId = selectedNote.CustomerId,
								Description = selectedNote.Description,
								CreatedAt = selectedNote.CreatedAt,
								CreatedBy = selectedNote.CreatedBy
							},
CurrentUsername = currentUser
				}" />
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@{
	string deleteNoteId = null;
	CRMApp.Models.Note deleteNote = null;
	if (Context.Request.HasFormContentType)
	{
		deleteNoteId = Context.Request.Form["deleteNoteId"];
		deleteNote = Model.Notes.FirstOrDefault(c => c.Id.ToString() == deleteNoteId);
	}

}
@if (deleteNote != null)
{
	<div class="modal fade show d-block" id="confirmNoteDeleteModal" tabindex="-1" aria-labelledby="deleteNoteModalLabel" aria-hidden="true" aria-modal="true" role="dialog" style="z-index:100000;">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-action="DeleteNote" asp-controller="Note" method="post">
					<input type="hidden" name="id" value="@deleteNote.Id" />
					<div class="modal-header">
						<h5 class="modal-title" id="deleteNoteModalLabel">Confirm Delete</h5>
						<a href="" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></a>
					</div>
					<div class="modal-body">
						Are you sure you want to delete note <strong>@deleteNote.Id</strong>?
					</div>
					<div class="modal-footer">
						<a href="" class="btn btn-secondary">Cancel</a>
						<button type="submit" class="btn btn-danger">Delete</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<div class="modal-backdrop fade show"></div>
}

@section Scripts {

	<script>
		
		$(document).ready(function () {
			$("#contactTypeList").on('change',function(){
				var contactTypeList = $("#contactTypeList option:selected").text();
				$("#contactType").text(contactTypeList)
			})

			$("#btnSave").click(function (e) {

				debugger;
				e.preventDefault();
				debugger;
				var form = $("#frmContact");
				if (form.valid()) {
					form.submit();
				}

			})
			$("#btnNoteSave").click(function(e){
				debugger;
				e.preventDefault();
				var form = $("#frmNote");
				if(form.valid()){
					form.submit()
				}
			})
			$(".contact-page-link").click(function (e) {
				e.preventDefault()

				var page = $(this).data("contactpageindex");
				var id = $(this).data("id");

				$.ajax({
					url: "/Contact/PagedData",
					type: 'GET',
					data: { pageIndex: page, customerId: id },
					success: function (result) {
						$('#partialContainer').html(result);

						$('.page-item').removeClass('active');
						$(e.target).closest('.page-item').addClass('active');
					}
				});
			});

			$(".note-page-link").click(function (e) {
				e.preventDefault()

				var page = $(this).data("notepageindex");
				var id = $(this).data("id");

				$.ajax({
					url: "/Note/PagedData",
					type: 'GET',
					data: { pageIndex: page, customerId: id },
					success: function (result) {
						$('#NotePartialContainer').html(result);

						$('.note-page-item').removeClass('active');
						$(e.target).closest('.note-page-item').addClass('active');
					}
				})
			})
		});

		
	</script>
}
