@model CRMApp.ViewModels.ContactViewModel;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div style="position: relative; top: -6rem;">
    <h1 class="text-center">Contact List</h1>
    <hr />
    <div >
        <form asp-action="Index" asp-controller="Contact" method="post">
            <div asp-validation-summary="ModelOnly"></div>
            <div class="d-flex gap-1">
                <select asp-for="ContactFilter" asp-items="Html.GetEnumSelectList<CRMApp.ViewModels.ContactFilter>()" class="form-control" style="width: 8%;"></select>
                <input asp-for="ContactInput" placeholder="Search Bar" class="form-control" required/>
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </div>
          </form>
  </div>
    
        <div class="d-flex justify-content-center mt-3">
            <table class="table table-bordered table-striped  table-hover table-responsive-sm table-responsive-md" style="border-color:darkgray;">
                <thead>
                    <tr>
                        <th>
                            Customer Name
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.customerContact.ContactName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.customerContact.Relation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.customerContact.ContactType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.customerContact.Contact)
                        </th>

                        @* <th></th> *@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Contacts)
                    {
                        <tr>
                            <td>
                                @Model.CustomerName(item.CustomerId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContactName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Relation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContactType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Contact)
                            </td>

                          
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <nav>
            <ul class="pagination">
            @if (Model.Contacts.HasPreviousPage)
            {
                <li class="page-item">
                    <a asp-route-pageIndex="@(Model.Contacts.PageIndex - 1)" class="page-link">Previous</a>
                </li>
            }
            @for(int i = Model.Contacts.StartPage; i <= Model.Contacts.EndPage; i++)
            {
                <li class="page-item @( i == Model.Contacts.PageIndex ? "active" : "")">
                    <a asp-route-pageIndex="@i" class="page-link">@i</a>
                </li>
            }
            @if (Model.Contacts.HasNextPage)
            {
                <li class="page-item">
                    <a asp-route-pageIndex="@(Model.Contacts.PageIndex + 1)" class="page-link">Next</a>
                </li>
            }
        </ul>
        </nav>
</div>